{
  "version": 3,
  "sources": ["../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-code-editor.mjs"],
  "sourcesContent": ["import { DOCUMENT, NgTemplateOutlet, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, EventEmitter, booleanAttribute, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ReplaySubject, BehaviorSubject, of, Subject, combineLatest, fromEvent } from 'rxjs';\nimport { tap, map, takeUntil, debounceTime, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { warn, PREFIX } from 'ng-zorro-antd/core/logger';\nimport { inNextTick } from 'ng-zorro-antd/core/util';\nimport { NzSpinComponent } from 'ng-zorro-antd/spin';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport * as i2 from '@angular/cdk/platform';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzCodeEditorComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelement(1, \"nz-spin\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzCodeEditorComponent_Conditional_1_ng_template_1_Template(rf, ctx) {}\nfunction NzCodeEditorComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, NzCodeEditorComponent_Conditional_1_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzToolkit);\n  }\n}\nconst NZ_CONFIG_MODULE_NAME = 'codeEditor';\nfunction tryTriggerFunc(fn) {\n  return (...args) => {\n    if (fn) {\n      fn(...args);\n    }\n  };\n}\n// Caretaker note: previously, these were `NzCodeEditorService` properties.\n// They're kept as static variables because this will allow loading Monaco only once.\n// This applies to micro frontend apps with multiple Angular apps or a single Angular app\n// that can be bootstrapped and destroyed multiple times (e.g. using Webpack module federation).\n// Root providers are re-initialized each time the app is bootstrapped. Platform providers aren't.\n// We can't make the `NzCodeEditorService` to be a platform provider (`@Injectable({ providedIn: 'platform' })`)\n// since it depends on other root providers.\nconst loaded$ = new ReplaySubject(1);\nlet loadingStatus = \"unload\" /* NzCodeEditorLoadingStatus.UNLOAD */;\nclass NzCodeEditorService {\n  constructor(nzConfigService) {\n    this.nzConfigService = nzConfigService;\n    this.document = inject(DOCUMENT);\n    this.firstEditorInitialized = false;\n    this.option = {};\n    this.option$ = new BehaviorSubject(this.option);\n    const globalConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n    this.config = {\n      ...globalConfig\n    };\n    if (this.config.monacoEnvironment) {\n      window.MonacoEnvironment = {\n        ...this.config.monacoEnvironment\n      };\n    }\n    this.option = this.config.defaultEditorOption || {};\n    this.subscription = this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).subscribe(() => {\n      const newGlobalConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n      if (newGlobalConfig) {\n        this._updateDefaultOption(newGlobalConfig.defaultEditorOption);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.subscription = null;\n  }\n  _updateDefaultOption(option) {\n    this.option = {\n      ...this.option,\n      ...option\n    };\n    this.option$.next(this.option);\n    if ('theme' in option && option.theme) {\n      monaco.editor.setTheme(option.theme);\n    }\n  }\n  requestToInit() {\n    if (loadingStatus === \"LOADED\" /* NzCodeEditorLoadingStatus.LOADED */) {\n      this.onInit();\n      return of(this.getLatestOption());\n    }\n    if (loadingStatus === \"unload\" /* NzCodeEditorLoadingStatus.UNLOAD */) {\n      if (this.config.useStaticLoading && typeof monaco === 'undefined') {\n        warn('You choose to use static loading but it seems that you forget ' + 'to config webpack plugin correctly. Please refer to our official website' + 'for more details about static loading.');\n      } else {\n        this.loadMonacoScript();\n      }\n    }\n    return loaded$.pipe(tap(() => this.onInit()), map(() => this.getLatestOption()));\n  }\n  loadMonacoScript() {\n    if (this.config.useStaticLoading) {\n      Promise.resolve().then(() => this.onLoad());\n      return;\n    }\n    if (loadingStatus === \"loading\" /* NzCodeEditorLoadingStatus.LOADING */) {\n      return;\n    }\n    loadingStatus = \"loading\" /* NzCodeEditorLoadingStatus.LOADING */;\n    const assetsRoot = this.config.assetsRoot;\n    const vs = assetsRoot ? `${assetsRoot}/vs` : 'assets/vs';\n    const windowAsAny = window;\n    const loadScript = this.document.createElement('script');\n    loadScript.type = 'text/javascript';\n    loadScript.src = `${vs}/loader.js`;\n    const onLoad = () => {\n      cleanup();\n      windowAsAny.require.config({\n        paths: {\n          vs\n        },\n        ...this.config.extraConfig\n      });\n      windowAsAny.require(['vs/editor/editor.main'], () => {\n        this.onLoad();\n      });\n    };\n    const onError = () => {\n      cleanup();\n      throw new Error(`${PREFIX} cannot load assets of monaco editor from source \"${vs}\".`);\n    };\n    const cleanup = () => {\n      // Caretaker note: we have to remove these listeners once the `<script>` is loaded successfully\n      // or not since the `onLoad` listener captures `this`, which will prevent the `NzCodeEditorService`\n      // from being garbage collected.\n      loadScript.removeEventListener('load', onLoad);\n      loadScript.removeEventListener('error', onError);\n      // We don't need to keep the `<script>` element within the `<body>` since JavaScript has\n      // been executed and Monaco is available globally. E.g. Webpack, always removes `<script>`\n      // elements after loading chunks (see its `LoadScriptRuntimeModule`).\n      this.document.documentElement.removeChild(loadScript);\n    };\n    loadScript.addEventListener('load', onLoad);\n    loadScript.addEventListener('error', onError);\n    this.document.documentElement.appendChild(loadScript);\n  }\n  onLoad() {\n    loadingStatus = \"LOADED\" /* NzCodeEditorLoadingStatus.LOADED */;\n    loaded$.next(true);\n    loaded$.complete();\n    tryTriggerFunc(this.config.onLoad)();\n  }\n  onInit() {\n    if (!this.firstEditorInitialized) {\n      this.firstEditorInitialized = true;\n      tryTriggerFunc(this.config.onFirstEditorInit)();\n    }\n    tryTriggerFunc(this.config.onInit)();\n  }\n  getLatestOption() {\n    return {\n      ...this.option\n    };\n  }\n  static {\n    this.ɵfac = function NzCodeEditorService_Factory(t) {\n      return new (t || NzCodeEditorService)(i0.ɵɵinject(i1.NzConfigService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzCodeEditorService,\n      factory: NzCodeEditorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCodeEditorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.NzConfigService\n  }], null);\n})();\nclass NzCodeEditorComponent {\n  set nzEditorOption(value) {\n    this.editorOption$.next(value);\n  }\n  constructor(nzCodeEditorService, ngZone, elementRef, platform) {\n    this.nzCodeEditorService = nzCodeEditorService;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.nzEditorMode = 'normal';\n    this.nzOriginalText = '';\n    this.nzLoading = false;\n    this.nzFullControl = false;\n    this.nzEditorInitialized = new EventEmitter();\n    this.editorOptionCached = {};\n    this.destroy$ = new Subject();\n    this.resize$ = new Subject();\n    this.editorOption$ = new BehaviorSubject({});\n    this.editorInstance = null;\n    this.value = '';\n    this.modelSet = false;\n    this.onDidChangeContentDisposable = null;\n    this.onChange = _value => {};\n    this.onTouch = () => {};\n    this.el = elementRef.nativeElement;\n    this.el.classList.add('ant-code-editor');\n  }\n  /**\n   * Initialize a monaco editor instance.\n   */\n  ngAfterViewInit() {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.nzCodeEditorService.requestToInit().pipe(takeUntil(this.destroy$)).subscribe(option => this.setup(option));\n  }\n  ngOnDestroy() {\n    if (this.onDidChangeContentDisposable) {\n      this.onDidChangeContentDisposable.dispose();\n      this.onDidChangeContentDisposable = null;\n    }\n    if (this.editorInstance) {\n      this.editorInstance.dispose();\n      this.editorInstance = null;\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  writeValue(value) {\n    this.value = value;\n    this.setValue();\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouch = fn;\n  }\n  layout() {\n    this.resize$.next();\n  }\n  setup(option) {\n    // The `setup()` is invoked when the Monaco editor is loaded. This may happen asynchronously for the first\n    // time, and it'll always happen synchronously afterwards. The first `setup()` invokation is outside the Angular\n    // zone, but further invokations will happen within the Angular zone. We call the `setModel()` on the editor\n    // instance, which tells Monaco to add event listeners lazily internally (`mousemove`, `mouseout`, etc.).\n    // We should avoid adding them within the Angular zone since this will drastically affect the performance.\n    this.ngZone.runOutsideAngular(() => inNextTick().pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.editorOptionCached = option;\n      this.registerOptionChanges();\n      this.initMonacoEditorInstance();\n      this.registerResizeChange();\n      this.setValue();\n      if (!this.nzFullControl) {\n        this.setValueEmitter();\n      }\n      if (this.nzEditorInitialized.observers.length) {\n        this.ngZone.run(() => this.nzEditorInitialized.emit(this.editorInstance));\n      }\n    }));\n  }\n  registerOptionChanges() {\n    combineLatest([this.editorOption$, this.nzCodeEditorService.option$]).pipe(takeUntil(this.destroy$)).subscribe(([selfOpt, defaultOpt]) => {\n      this.editorOptionCached = {\n        ...this.editorOptionCached,\n        ...defaultOpt,\n        ...selfOpt\n      };\n      this.updateOptionToMonaco();\n    });\n  }\n  initMonacoEditorInstance() {\n    this.ngZone.runOutsideAngular(() => {\n      this.editorInstance = this.nzEditorMode === 'normal' ? monaco.editor.create(this.el, {\n        ...this.editorOptionCached\n      }) : monaco.editor.createDiffEditor(this.el, {\n        ...this.editorOptionCached\n      });\n    });\n  }\n  registerResizeChange() {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(window, 'resize').pipe(debounceTime(300), takeUntil(this.destroy$)).subscribe(() => {\n        this.layout();\n      });\n      this.resize$.pipe(takeUntil(this.destroy$), filter(() => !!this.editorInstance), map(() => ({\n        width: this.el.clientWidth,\n        height: this.el.clientHeight\n      })), distinctUntilChanged((a, b) => a.width === b.width && a.height === b.height), debounceTime(50)).subscribe(() => {\n        this.editorInstance.layout();\n      });\n    });\n  }\n  setValue() {\n    if (!this.editorInstance) {\n      return;\n    }\n    if (this.nzFullControl && this.value) {\n      warn(`should not set value when you are using full control mode! It would result in ambiguous data flow!`);\n      return;\n    }\n    if (this.nzEditorMode === 'normal') {\n      if (this.modelSet) {\n        const model = this.editorInstance.getModel();\n        this.preservePositionAndSelections(() => model.setValue(this.value));\n      } else {\n        this.editorInstance.setModel(monaco.editor.createModel(this.value, this.editorOptionCached.language));\n        this.modelSet = true;\n      }\n    } else {\n      if (this.modelSet) {\n        const model = this.editorInstance.getModel();\n        this.preservePositionAndSelections(() => {\n          model.modified.setValue(this.value);\n          model.original.setValue(this.nzOriginalText);\n        });\n      } else {\n        const language = this.editorOptionCached.language;\n        this.editorInstance.setModel({\n          original: monaco.editor.createModel(this.nzOriginalText, language),\n          modified: monaco.editor.createModel(this.value, language)\n        });\n        this.modelSet = true;\n      }\n    }\n  }\n  /**\n   * {@link editor.ICodeEditor}#setValue resets the cursor position to the start of the document.\n   * This helper memorizes the cursor position and selections and restores them after the given\n   * function has been called.\n   */\n  preservePositionAndSelections(fn) {\n    if (!this.editorInstance) {\n      fn();\n      return;\n    }\n    const position = this.editorInstance.getPosition();\n    const selections = this.editorInstance.getSelections();\n    fn();\n    if (position) {\n      this.editorInstance.setPosition(position);\n    }\n    if (selections) {\n      this.editorInstance.setSelections(selections);\n    }\n  }\n  setValueEmitter() {\n    const model = this.nzEditorMode === 'normal' ? this.editorInstance.getModel() : this.editorInstance.getModel().modified;\n    // The `onDidChangeContent` returns a disposable object (an object with `dispose()` method) which will cleanup\n    // the listener. The callback, that we pass to `onDidChangeContent`, captures `this`. This leads to a circular reference\n    // (`nz-code-editor -> monaco -> nz-code-editor`) and prevents the `nz-code-editor` from being GC'd.\n    this.onDidChangeContentDisposable = model.onDidChangeContent(() => {\n      this.emitValue(model.getValue());\n    });\n  }\n  emitValue(value) {\n    if (this.value === value) {\n      // If the value didn't change there's no reason to send an update.\n      // Specifically this may happen during an update from the model (writeValue) where sending an update to the model would actually be incorrect.\n      return;\n    }\n    this.value = value;\n    // We're re-entering the Angular zone only if the value has been changed since there's a `return` expression previously.\n    // This won't cause \"dead\" change detections (basically when the `tick()` has been run, but there's nothing to update).\n    this.ngZone.run(() => {\n      this.onChange(value);\n    });\n  }\n  updateOptionToMonaco() {\n    if (this.editorInstance) {\n      this.editorInstance.updateOptions({\n        ...this.editorOptionCached\n      });\n    }\n  }\n  static {\n    this.ɵfac = function NzCodeEditorComponent_Factory(t) {\n      return new (t || NzCodeEditorComponent)(i0.ɵɵdirectiveInject(NzCodeEditorService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Platform));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzCodeEditorComponent,\n      selectors: [[\"nz-code-editor\"]],\n      inputs: {\n        nzEditorMode: \"nzEditorMode\",\n        nzOriginalText: \"nzOriginalText\",\n        nzLoading: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"nzLoading\", \"nzLoading\", booleanAttribute],\n        nzFullControl: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"nzFullControl\", \"nzFullControl\", booleanAttribute],\n        nzToolkit: \"nzToolkit\",\n        nzEditorOption: \"nzEditorOption\"\n      },\n      outputs: {\n        nzEditorInitialized: \"nzEditorInitialized\"\n      },\n      exportAs: [\"nzCodeEditor\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCodeEditorComponent),\n        multi: true\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 2,\n      consts: [[1, \"ant-code-editor-loading\"], [1, \"ant-code-editor-toolkit\"], [3, \"ngTemplateOutlet\"]],\n      template: function NzCodeEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzCodeEditorComponent_Conditional_0_Template, 2, 0, \"div\", 0)(1, NzCodeEditorComponent_Conditional_1_Template, 2, 1, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.nzLoading ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(1, ctx.nzToolkit ? 1 : -1);\n        }\n      },\n      dependencies: [NzSpinComponent, NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCodeEditorComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-code-editor',\n      exportAs: 'nzCodeEditor',\n      template: `\n    @if (nzLoading) {\n      <div class=\"ant-code-editor-loading\">\n        <nz-spin />\n      </div>\n    }\n    @if (nzToolkit) {\n      <div class=\"ant-code-editor-toolkit\">\n        <ng-template [ngTemplateOutlet]=\"nzToolkit\" />\n      </div>\n    }\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCodeEditorComponent),\n        multi: true\n      }],\n      imports: [NgIf, NzSpinComponent, NgTemplateOutlet],\n      standalone: true\n    }]\n  }], () => [{\n    type: NzCodeEditorService\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i2.Platform\n  }], {\n    nzEditorMode: [{\n      type: Input\n    }],\n    nzOriginalText: [{\n      type: Input\n    }],\n    nzLoading: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzFullControl: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzToolkit: [{\n      type: Input\n    }],\n    nzEditorOption: [{\n      type: Input\n    }],\n    nzEditorInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCodeEditorModule {\n  static {\n    this.ɵfac = function NzCodeEditorModule_Factory(t) {\n      return new (t || NzCodeEditorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzCodeEditorModule,\n      imports: [NzCodeEditorComponent],\n      exports: [NzCodeEditorComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzCodeEditorComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCodeEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzCodeEditorComponent],\n      exports: [NzCodeEditorComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCodeEditorComponent, NzCodeEditorModule, NzCodeEditorService };\n"],
  "mappings": "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",
  "names": []
}
