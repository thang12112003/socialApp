{
  "version": 3,
  "sources": ["../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-color.mjs", "../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-config.mjs"],
  "sourcesContent": ["import { rgbToHsv, rgbToHex, inputToRGB } from '@ctrl/tinycolor';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst statusColors = ['success', 'processing', 'error', 'default', 'warning'];\nconst presetColors = [\n    'pink',\n    'red',\n    'yellow',\n    'orange',\n    'cyan',\n    'green',\n    'blue',\n    'purple',\n    'geekblue',\n    'magenta',\n    'volcano',\n    'gold',\n    'lime'\n];\nfunction isPresetColor(color) {\n    return presetColors.indexOf(color) !== -1;\n}\nfunction isStatusColor(color) {\n    return statusColors.indexOf(color) !== -1;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * Sync from @ant-design/colors(https://github.com/ant-design/ant-design-colors)\n */\nconst hueStep = 2; // 色相阶梯\nconst saturationStep = 0.16; // 饱和度阶梯，浅色部分\nconst saturationStep2 = 0.05; // 饱和度阶梯，深色部分\nconst brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\nconst brightnessStep2 = 0.15; // 亮度阶梯，深色部分\nconst lightColorCount = 5; // 浅色数量，主色上\nconst darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\nconst darkColorMap = [\n    { index: 7, opacity: 0.15 },\n    { index: 6, opacity: 0.25 },\n    { index: 5, opacity: 0.3 },\n    { index: 5, opacity: 0.45 },\n    { index: 5, opacity: 0.65 },\n    { index: 5, opacity: 0.85 },\n    { index: 4, opacity: 0.9 },\n    { index: 3, opacity: 0.95 },\n    { index: 2, opacity: 0.97 },\n    { index: 1, opacity: 0.98 }\n];\n// Wrapper function ported from TinyColor.prototype.toHsv\n// Keep it here because of `hsv.h * 360`\nfunction toHsv({ r, g, b }) {\n    const hsv = rgbToHsv(r, g, b);\n    return { h: hsv.h * 360, s: hsv.s, v: hsv.v };\n}\n// Wrapper function ported from TinyColor.prototype.toHexString\n// Keep it here because of the prefix `#`\nfunction toHex({ r, g, b }) {\n    return `#${rgbToHex(r, g, b, false)}`;\n}\n// Wrapper function ported from TinyColor.prototype.mix, not treeshakable.\n// Amount in range [0, 1]\n// Assume color1 & color2 has no alpha, since the following src code did so.\nfunction mix(rgb1, rgb2, amount) {\n    const p = amount / 100;\n    const rgb = {\n        r: (rgb2.r - rgb1.r) * p + rgb1.r,\n        g: (rgb2.g - rgb1.g) * p + rgb1.g,\n        b: (rgb2.b - rgb1.b) * p + rgb1.b\n    };\n    return rgb;\n}\nfunction getHue(hsv, i, light) {\n    let hue;\n    // 根据色相不同，色相转向不同\n    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n        hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n    }\n    else {\n        hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n    }\n    if (hue < 0) {\n        hue += 360;\n    }\n    else if (hue >= 360) {\n        hue -= 360;\n    }\n    return hue;\n}\nfunction getSaturation(hsv, i, light) {\n    // grey color don't change saturation\n    if (hsv.h === 0 && hsv.s === 0) {\n        return hsv.s;\n    }\n    let saturation;\n    if (light) {\n        saturation = hsv.s - saturationStep * i;\n    }\n    else if (i === darkColorCount) {\n        saturation = hsv.s + saturationStep;\n    }\n    else {\n        saturation = hsv.s + saturationStep2 * i;\n    }\n    // 边界值修正\n    if (saturation > 1) {\n        saturation = 1;\n    }\n    // 第一格的 s 限制在 0.06-0.1 之间\n    if (light && i === lightColorCount && saturation > 0.1) {\n        saturation = 0.1;\n    }\n    if (saturation < 0.06) {\n        saturation = 0.06;\n    }\n    return Number(saturation.toFixed(2));\n}\nfunction getValue(hsv, i, light) {\n    let value;\n    if (light) {\n        value = hsv.v + brightnessStep1 * i;\n    }\n    else {\n        value = hsv.v - brightnessStep2 * i;\n    }\n    if (value > 1) {\n        value = 1;\n    }\n    return Number(value.toFixed(2));\n}\nfunction generate(color, opts = {}) {\n    const patterns = [];\n    const pColor = inputToRGB(color);\n    for (let i = lightColorCount; i > 0; i -= 1) {\n        const hsv = toHsv(pColor);\n        const colorString = toHex(inputToRGB({\n            h: getHue(hsv, i, true),\n            s: getSaturation(hsv, i, true),\n            v: getValue(hsv, i, true)\n        }));\n        patterns.push(colorString);\n    }\n    patterns.push(toHex(pColor));\n    for (let i = 1; i <= darkColorCount; i += 1) {\n        const hsv = toHsv(pColor);\n        const colorString = toHex(inputToRGB({\n            h: getHue(hsv, i),\n            s: getSaturation(hsv, i),\n            v: getValue(hsv, i)\n        }));\n        patterns.push(colorString);\n    }\n    // dark theme patterns\n    if (opts.theme === 'dark') {\n        return darkColorMap.map(({ index, opacity }) => {\n            const darkColorString = toHex(mix(inputToRGB(opts.backgroundColor || '#141414'), inputToRGB(patterns[index]), opacity * 100));\n            return darkColorString;\n        });\n    }\n    return patterns;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { generate, isPresetColor, isStatusColor, presetColors, statusColors };\n\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, makeEnvironmentProviders, inject, CSP_NONCE, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, mapTo } from 'rxjs/operators';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { generate } from 'ng-zorro-antd/core/color';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { canUseDom, updateCSS } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * User should provide an object implements this interface to set global configurations.\n */\nconst NZ_CONFIG = new InjectionToken('nz-config');\nfunction provideNzConfig(config) {\n  return makeEnvironmentProviders([{\n    provide: NZ_CONFIG,\n    useValue: config\n  }]);\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * Sync from @ant-design/colors(https://github.com/ant-design/ant-design-colors)\n */\nconst dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;\nfunction getStyle(globalPrefixCls, theme) {\n  const variables = {};\n  const formatColor = (color, updater) => {\n    let clone = color.clone();\n    clone = updater?.(clone) || clone;\n    return clone.toRgbString();\n  };\n  const fillColor = (colorVal, type) => {\n    const baseColor = new TinyColor(colorVal);\n    const colorPalettes = generate(baseColor.toRgbString());\n    variables[`${type}-color`] = formatColor(baseColor);\n    variables[`${type}-color-disabled`] = colorPalettes[1];\n    variables[`${type}-color-hover`] = colorPalettes[4];\n    variables[`${type}-color-active`] = colorPalettes[7];\n    variables[`${type}-color-outline`] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[`${type}-color-deprecated-bg`] = colorPalettes[1];\n    variables[`${type}-color-deprecated-border`] = colorPalettes[3];\n  };\n  // ================ Primary Color ================\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    const primaryColor = new TinyColor(theme.primaryColor);\n    const primaryColors = generate(primaryColor.toRgbString());\n    // Legacy - We should use semantic naming standard\n    primaryColors.forEach((color, index) => {\n      variables[`primary-${index + 1}`] = color;\n    });\n    // Deprecated\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, c => c.lighten(35));\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, c => c.lighten(20));\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, c => c.tint(20));\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, c => c.tint(50));\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, c => c.setAlpha(c.getAlpha() * 0.12));\n    const primaryActiveColor = new TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, c => c.setAlpha(c.getAlpha() * 0.3));\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, c => c.darken(2));\n  }\n  // ================ Success Color ================\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  }\n  // ================ Warning Color ================\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  }\n  // ================= Error Color =================\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  }\n  // ================= Info Color ==================\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  }\n  // Convert to css variables\n  const cssList = Object.keys(variables).map(key => `--${globalPrefixCls}-${key}: ${variables[key]};`);\n  return `\n  :root {\n    ${cssList.join('\\n')}\n  }\n  `.trim();\n}\nfunction registerTheme(globalPrefixCls, theme, cspNonce) {\n  const style = getStyle(globalPrefixCls, theme);\n  if (canUseDom()) {\n    updateCSS(style, `${dynamicStyleMark}-dynamic-theme`, {\n      cspNonce\n    });\n  } else {\n    warn(`NzConfigService: SSR do not support dynamic theme with css variables.`);\n  }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst isDefined = function (value) {\n  return value !== undefined;\n};\nconst defaultPrefixCls = 'ant';\nclass NzConfigService {\n  constructor() {\n    this.configUpdated$ = new Subject();\n    /** Global config holding property. */\n    this.config = inject(NZ_CONFIG, {\n      optional: true\n    }) || {};\n    this.cspNonce = inject(CSP_NONCE, {\n      optional: true\n    });\n    if (this.config.theme) {\n      // If theme is set with NZ_CONFIG, register theme to make sure css variables work\n      registerTheme(this.getConfig().prefixCls?.prefixCls || defaultPrefixCls, this.config.theme, this.cspNonce);\n    }\n  }\n  getConfig() {\n    return this.config;\n  }\n  getConfigForComponent(componentName) {\n    return this.config[componentName];\n  }\n  getConfigChangeEventForComponent(componentName) {\n    return this.configUpdated$.pipe(filter(n => n === componentName), mapTo(undefined));\n  }\n  set(componentName, value) {\n    this.config[componentName] = {\n      ...this.config[componentName],\n      ...value\n    };\n    if (componentName === 'theme' && this.config.theme) {\n      registerTheme(this.getConfig().prefixCls?.prefixCls || defaultPrefixCls, this.config.theme, this.cspNonce);\n    }\n    this.configUpdated$.next(componentName);\n  }\n  static {\n    this.ɵfac = function NzConfigService_Factory(t) {\n      return new (t || NzConfigService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzConfigService,\n      factory: NzConfigService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzConfigService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/* eslint-disable no-invalid-this */\n/**\n * This decorator is used to decorate properties. If a property is decorated, it would try to load default value from\n * config.\n */\n// eslint-disable-next-line\nfunction WithConfig() {\n  return function ConfigDecorator(target, propName, originalDescriptor) {\n    const privatePropName = `$$__zorroConfigDecorator__${propName}`;\n    Object.defineProperty(target, privatePropName, {\n      configurable: true,\n      writable: true,\n      enumerable: false\n    });\n    return {\n      get() {\n        const originalValue = originalDescriptor?.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n        const assignedByUser = (this.propertyAssignCounter?.[propName] || 0) > 1;\n        const configValue = this.nzConfigService.getConfigForComponent(this._nzModuleName)?.[propName];\n        if (assignedByUser && isDefined(originalValue)) {\n          return originalValue;\n        } else {\n          return isDefined(configValue) ? configValue : originalValue;\n        }\n      },\n      set(value) {\n        // If the value is assigned, we consider the newly assigned value as 'assigned by user'.\n        this.propertyAssignCounter = this.propertyAssignCounter || {};\n        this.propertyAssignCounter[propName] = (this.propertyAssignCounter[propName] || 0) + 1;\n        if (originalDescriptor?.set) {\n          originalDescriptor.set.bind(this)(value);\n        } else {\n          this[privatePropName] = value;\n        }\n      },\n      configurable: true,\n      enumerable: true\n    };\n  };\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_CONFIG, NzConfigService, WithConfig, getStyle, provideNzConfig, registerTheme };\n"],
  "mappings": "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",
  "names": []
}
