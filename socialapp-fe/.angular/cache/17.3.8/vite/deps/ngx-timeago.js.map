{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-timeago/fesm2022/ngx-timeago.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, Directive, Optional, Input, Pipe, NgModule } from '@angular/core';\nimport { Subject, of, timer, empty } from 'rxjs';\nimport { expand, skip, filter } from 'rxjs/operators';\nfunction isDefined(value) {\n  return typeof value !== 'undefined' && value !== null;\n}\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\nfunction dateParser(date) {\n  const parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n  const parts = String(date).match(/\\d+/g);\n  if (parts === null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x, 10));\n    return new Date(Date.UTC(firstP, secondP - 1, ...restPs));\n  }\n}\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n;\n/**\n * To modify the text displayed, create a new instance of TimeagoIntl and\n * include it in a custom provider\n */\nclass TimeagoIntl {\n  constructor() {\n    /**\n     * Stream that emits whenever the l10n strings are changed\n     * Use this to notify directives if the l10n strings have changed after initialization.\n     */\n    this.changes = new Subject();\n  }\n  static {\n    this.ɵfac = function TimeagoIntl_Factory(t) {\n      return new (t || TimeagoIntl)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoIntl,\n      factory: TimeagoIntl.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoIntl, [{\n    type: Injectable\n  }], null, null);\n})();\nconst defaultFormattter = function (then) {\n  const now = Date.now();\n  const seconds = Math.round(Math.abs(now - then) / 1000);\n  const suffix = then < now ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  return {\n    value,\n    unit,\n    suffix\n  };\n};\nclass TimeagoFormatter {}\nclass TimeagoDefaultFormatter extends TimeagoFormatter {\n  format(then) {\n    const {\n      suffix,\n      value,\n      unit\n    } = defaultFormattter(then);\n    return this.parse(value, unit, suffix);\n  }\n  parse(value, unit, suffix) {\n    if (value !== 1) {\n      unit += 's';\n    }\n    return value + ' ' + unit + ' ' + suffix;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTimeagoDefaultFormatter_BaseFactory;\n      return function TimeagoDefaultFormatter_Factory(t) {\n        return (ɵTimeagoDefaultFormatter_BaseFactory || (ɵTimeagoDefaultFormatter_BaseFactory = i0.ɵɵgetInheritedFactory(TimeagoDefaultFormatter)))(t || TimeagoDefaultFormatter);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoDefaultFormatter,\n      factory: TimeagoDefaultFormatter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoDefaultFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TimeagoCustomFormatter extends TimeagoFormatter {\n  constructor(intl) {\n    super();\n    this.intl = intl;\n  }\n  format(then) {\n    const {\n      suffix,\n      value,\n      unit\n    } = defaultFormattter(then);\n    return this.parse(value, unit, suffix, Date.now(), then);\n  }\n  parse(value, unit, suffix, now, then) {\n    /** convert weeks to days if strings don't handle weeks */\n    if (unit === 'week' && !this.intl.strings.week && !this.intl.strings.weeks) {\n      const days = Math.round(Math.abs(now - then) / (1000 * 60 * 60 * 24));\n      value = days;\n      unit = 'day';\n    }\n    /** create a normalize function for given value */\n    const normalize = this.normalizeFn(value, now - then, this.intl.strings.numbers);\n    /** The eventual return value stored in an array so that the wordSeparator can be used */\n    const dateString = [];\n    /** handle prefixes */\n    if (suffix === 'ago' && this.intl.strings.prefixAgo) {\n      dateString.push(normalize(this.intl.strings.prefixAgo));\n    }\n    if (suffix === 'from now' && this.intl.strings.prefixFromNow) {\n      dateString.push(normalize(this.intl.strings.prefixFromNow));\n    }\n    /** Handle Main number and unit */\n    const isPlural = value > 1;\n    if (isPlural) {\n      const stringFn = this.intl.strings[unit + 's'] || this.intl.strings[unit] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    } else {\n      const stringFn = this.intl.strings[unit] || this.intl.strings[unit + 's'] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    }\n    /** Handle Suffixes */\n    if (suffix === 'ago' && this.intl.strings.suffixAgo) {\n      dateString.push(normalize(this.intl.strings.suffixAgo));\n    }\n    if (suffix === 'from now' && this.intl.strings.suffixFromNow) {\n      dateString.push(normalize(this.intl.strings.suffixFromNow));\n    }\n    /** join the array into a string and return it */\n    const wordSeparator = typeof this.intl.strings.wordSeparator === 'string' ? this.intl.strings.wordSeparator : ' ';\n    return dateString.join(wordSeparator);\n  }\n  /**\n   * If the numbers array is present, format numbers with it,\n   * otherwise just cast the number to a string and return it\n  */\n  normalizeNumber(numbers, value) {\n    return numbers && numbers.length === 10 ? String(value).split('').map(digit => digit.match(/^[0-9]$/) ? numbers[parseInt(digit, 10)] : digit).join('') : String(value);\n  }\n  /**\n   * Take a string or a function that takes number of days and returns a string\n   * and provide a uniform API to create string parts\n  */\n  normalizeFn(value, millisDelta, numbers) {\n    return stringOrFn => typeof stringOrFn === 'function' ? stringOrFn(value, millisDelta).replace(/%d/g, this.normalizeNumber(numbers, value)) : stringOrFn.replace(/%d/g, this.normalizeNumber(numbers, value));\n  }\n  static {\n    this.ɵfac = function TimeagoCustomFormatter_Factory(t) {\n      return new (t || TimeagoCustomFormatter)(i0.ɵɵinject(TimeagoIntl));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoCustomFormatter,\n      factory: TimeagoCustomFormatter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoCustomFormatter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: TimeagoIntl\n    }];\n  }, null);\n})();\nclass TimeagoClock {}\nclass TimeagoDefaultClock extends TimeagoClock {\n  tick(then) {\n    return of(0).pipe(expand(() => {\n      const now = Date.now();\n      const seconds = Math.round(Math.abs(now - then) / 1000);\n      const period = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 0;\n      return period ? timer(period) : empty();\n    }), skip(1));\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTimeagoDefaultClock_BaseFactory;\n      return function TimeagoDefaultClock_Factory(t) {\n        return (ɵTimeagoDefaultClock_BaseFactory || (ɵTimeagoDefaultClock_BaseFactory = i0.ɵɵgetInheritedFactory(TimeagoDefaultClock)))(t || TimeagoDefaultClock);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoDefaultClock,\n      factory: TimeagoDefaultClock.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoDefaultClock, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TimeagoDirective {\n  /** The Date to display. An actual Date object or something that can be fed to new Date. */\n  get date() {\n    return this._date;\n  }\n  set date(date) {\n    this._date = dateParser(date).valueOf();\n    if (this._date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n      this.clockSubscription = this.clock.tick(this.date).pipe(filter(() => this.live, this)).subscribe(() => this.stateChanges.next());\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoDirective. Expected a valid date, received: ${date}`);\n    }\n  }\n  /** If the directive should update itself over time */\n  get live() {\n    return this._live;\n  }\n  set live(live) {\n    this._live = coerceBooleanProperty(live);\n  }\n  constructor(intl, cd, formatter, element, clock) {\n    this.cd = cd;\n    this.clock = clock;\n    /**\n     * Emits on:\n     * - Input change\n     * - Intl change\n     * - Clock tick\n    */\n    this.stateChanges = new Subject();\n    this._live = true;\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n    this.stateChanges.subscribe(() => {\n      this.setContent(element.nativeElement, formatter.format(this.date));\n      this.cd.markForCheck();\n    });\n  }\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n  setContent(node, content) {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n    this.stateChanges.complete();\n  }\n  static {\n    this.ɵfac = function TimeagoDirective_Factory(t) {\n      return new (t || TimeagoDirective)(i0.ɵɵdirectiveInject(TimeagoIntl, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TimeagoFormatter), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TimeagoClock));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TimeagoDirective,\n      selectors: [[\"\", \"timeago\", \"\"]],\n      inputs: {\n        date: \"date\",\n        live: \"live\"\n      },\n      exportAs: [\"timeago\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[timeago]',\n      exportAs: 'timeago'\n    }]\n  }], function () {\n    return [{\n      type: TimeagoIntl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: TimeagoFormatter\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: TimeagoClock\n    }];\n  }, {\n    date: [{\n      type: Input\n    }],\n    live: [{\n      type: Input\n    }]\n  });\n})();\nclass TimeagoPipe {\n  constructor(intl, cd, formatter, clock) {\n    this.clock = clock;\n    this.live = true;\n    /**\n     * Emits on:\n     * - Input change\n     * - Intl change\n     * - Clock tick\n    */\n    this.stateChanges = new Subject();\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n    this.stateChanges.subscribe(() => {\n      this.value = formatter.format(this.date);\n      cd.markForCheck();\n    });\n  }\n  transform(date, ...args) {\n    const _date = dateParser(date).valueOf();\n    let _live;\n    _live = isDefined(args[0]) ? coerceBooleanProperty(args[0]) : this.live;\n    if (this.date === _date && this.live === _live) {\n      return this.value;\n    }\n    this.date = _date;\n    this.live = _live;\n    if (this.date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n      this.clockSubscription = this.clock.tick(this.date).pipe(filter(() => this.live, this)).subscribe(() => this.stateChanges.next());\n      this.stateChanges.next();\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoPipe. Expected a valid date, received: ${date}`);\n    }\n    return this.value;\n  }\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n    this.stateChanges.complete();\n  }\n  static {\n    this.ɵfac = function TimeagoPipe_Factory(t) {\n      return new (t || TimeagoPipe)(i0.ɵɵdirectiveInject(TimeagoIntl, 24), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16), i0.ɵɵdirectiveInject(TimeagoFormatter, 16), i0.ɵɵdirectiveInject(TimeagoClock, 16));\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"timeago\",\n      type: TimeagoPipe,\n      pure: false\n    });\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoPipe,\n      factory: TimeagoPipe.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoPipe, [{\n    type: Injectable\n  }, {\n    type: Pipe,\n    args: [{\n      name: 'timeago',\n      pure: false // required to update the value when stateChanges emits\n    }]\n  }], function () {\n    return [{\n      type: TimeagoIntl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: TimeagoFormatter\n    }, {\n      type: TimeagoClock\n    }];\n  }, null);\n})();\nclass TimeagoModule {\n  /**\n   * Use this method in your root module to provide the TimeagoModule\n   */\n  static forRoot(config = {}) {\n    return {\n      ngModule: TimeagoModule,\n      providers: [config.clock || {\n        provide: TimeagoClock,\n        useClass: TimeagoDefaultClock\n      }, config.intl || [], config.formatter || {\n        provide: TimeagoFormatter,\n        useClass: TimeagoDefaultFormatter\n      }]\n    };\n  }\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n  static forChild(config = {}) {\n    return {\n      ngModule: TimeagoModule,\n      providers: [config.clock || {\n        provide: TimeagoClock,\n        useClass: TimeagoDefaultClock\n      }, config.intl || [], config.formatter || {\n        provide: TimeagoFormatter,\n        useClass: TimeagoDefaultFormatter\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function TimeagoModule_Factory(t) {\n      return new (t || TimeagoModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TimeagoModule,\n      declarations: [TimeagoDirective, TimeagoPipe],\n      exports: [TimeagoDirective, TimeagoPipe]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TimeagoDirective, TimeagoPipe],\n      exports: [TimeagoDirective, TimeagoPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimeagoClock, TimeagoCustomFormatter, TimeagoDefaultClock, TimeagoDefaultFormatter, TimeagoDirective, TimeagoFormatter, TimeagoIntl, TimeagoModule, TimeagoPipe };\n"],
  "mappings": "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",
  "names": []
}
