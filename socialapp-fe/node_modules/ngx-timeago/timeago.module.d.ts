import { ModuleWithProviders, Provider } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./timeago.directive";
import * as i2 from "./timeago.pipe";
export interface TimeagoModuleConfig {
    clock?: Provider;
    intl?: Provider;
    formatter?: Provider;
}
export declare class TimeagoModule {
    /**
     * Use this method in your root module to provide the TimeagoModule
     */
    static forRoot(config?: TimeagoModuleConfig): ModuleWithProviders<TimeagoModule>;
    /**
     * Use this method in your other (non root) modules to import the directive/pipe
     */
    static forChild(config?: TimeagoModuleConfig): ModuleWithProviders<TimeagoModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<TimeagoModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<TimeagoModule, [typeof i1.TimeagoDirective, typeof i2.TimeagoPipe], never, [typeof i1.TimeagoDirective, typeof i2.TimeagoPipe]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<TimeagoModule>;
}
